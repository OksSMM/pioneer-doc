Блочное программирование в приложении Jump
==========================================

Мы создали в приложении Jump визуальную среду программирования для детей и подростков. Раздел «блочное программирование» позволяет в простой и доступной форме познакомиться с основными функциями Пионера Мини.

В блочном программировании движения и действия квадрокоптера представлены в виде перетаскиваемых блоков, которые могут соединяться в программу управления дроном. Блоки перетаскиваются по технологии drag-and-drop: удерживание нажатия на блоке запускает процесс перетаскивания, а отпускание нажатия заканчивает процесс перетаскивания.

Для перехода в раздел запустите приложение на вашем устройстве и нажмите иконку с блоками в верхнем левом углу. 

.. figure:: ../../../_static/images/jump_blockMode/blocks_tutorial_1_light.svg


Интерфейс
---------

Экран разделён на 2 части. 
В левой части экрана представлена палитра всех блоков. Часть из них может не помещаться на экране вашего устройства. В этом случае следует воспользоваться вертикальным тач-скролом для поиска необходимого блока.
Правую часть экрана занимает рабочая область, в которой создаётся программа. Также справа находятся кнопки и вспомогательные блоки:

1.	Кнопка запуска в виде зелёного треугольника служит для старта готовой программы.
2.	Индикатор работы отображается в процессе выполнения программы.
3.	Кнопка остановки выполнит экстренную посадку в случае непредвиденных обстоятельств.
4.	Корзина для удаления ненужных блоков. Выберите блок и переместите его в корзину для удаления с рабочей области.

.. figure:: ../../../_static/images/jump_blockMode/blocks_tutorial_2_light.svg

В случае написания большой программы, она может не помещаться на экран устройства. Для этого случая предусмотрено масштабирование рабочей области. Чтобы увеличить и уменьшить масштаб, разведите или сведите два пальца на рабочей области.

Описание блоков
---------------

Ниже описаны все доступные блоки и выполняемые ими действия:

.. raw:: html

 	<style type ="text/css">
		table{border:solid 3px #f6f6f6; background-color:#ffffff; width:100%;}
		th,td{height:70px; vertical-align:middle; border:solid 3px #f6f6f6;}
		td {padding:5px 10px 5px 10px;}
	</style>

 	<table rules="all" align="center">
 		
	 		<tr style="background-color:#FFD747;">
	 			<th>Название блока</th><th>Изображение</th><th>Действие</th>
	 		</tr>
	 		<tr>
	 			<td>TAKE OFF</td><td><img src="../../../_static/images/jump_blockMode/takeoff.svg"alt="TAKE OFF"></td><td>Взлёт на высоту 'Take off'. Высота задаётся параметром Flight_com_takeoffAlt и указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>LAND</td><td><img src="../../../_static/images/jump_blockMode/land.svg"alt="LAND"></td><td>Посадка.</td>
	 		</tr>
	 		<tr>
	 			<td>REPEAT</td><td><img src="../../../_static/images/jump_blockMode/repeat.svg"alt="REPEAT"></td><td>Выполняет включающие в себя операции указанное количество раз.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE FORWARD</td><td><img src="../../../_static/images/jump_blockMode/move_fw.svg"alt="MOVE FORWARD"></td><td>Движение вперёд. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE BACKWARD</td><td><img src="../../../_static/images/jump_blockMode/move_bw.svg"alt="MOVE BACKWARD"></td><td>Движение назад. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE LEFT</td><td><img src="../../../_static/images/jump_blockMode/move_left.svg"alt="MOVE LEFT"></td><td>Движение влево. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE RIGHT</td><td><img src="../../../_static/images/jump_blockMode/move_right.svg"alt="MOVE RIGHT"></td><td>Движение вправо. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE UP</td><td><img src="../../../_static/images/jump_blockMode/move_up.svg"alt="MOVE UP"></td><td>Движение вверх. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>MOVE DOWN</td><td><img src="../../../_static/images/jump_blockMode/move_down.svg"alt="MOVE DOWN"></td><td>Движение вниз. Расстояние указывается в метрах.</td>
	 		</tr>
	 		<tr>
	 			<td>TURN LEFT</td><td><img src="../../../_static/images/jump_blockMode/turn_left.svg"alt="TURN LEFT"></td><td>Поворот относительно вертикальной оси (рысканье) влево. Значение указывается в градусах.</td>
	 		</tr>
	 		<tr>
	 			<td>TURN RIGHT</td><td><img src="../../../_static/images/jump_blockMode/turn_right.svg"alt="TURN RIGHT"></td><td>Поворот относительно вертикальной оси (рысканье) вправо. Значение указывается в градусах.</td>
	 		</tr>
	 		<tr>
	 			<td>SET COLOR</td><td><img src="../../../_static/images/jump_blockMode/set_color.svg"alt="SET COLOR"></td><td>Включение бортовых светодиодов. При нажатии открывает палитру доступных цветов.</td>
	 		</tr>
	 		<tr>
	 			<td>SLEEP</td><td><img src="../../../_static/images/jump_blockMode/sleep.svg"alt="SLEEP"></td><td>Установка задержки. Значение указывается в секундах.</td>
	 		</tr>
	 		<tr>
	 			<td>TAKE PHOTO</td><td><img src="../../../_static/images/jump_blockMode/photo.svg"alt="TAKE PHOTO"></td><td>Сделать фотографию. Фото сохранится на устройство или SD-карту, в зависимости от настроек приложения.</td>
	 		</tr> 		
 	</table>
 	<br>


Пример составления программы
-----------------------------

Для создания программы необходимо перенести блоки из палитры в рабочую область и выстроить их в необходимом порядке. Блоки автоматически присоединяются в то место, в которое их установили. Таким образом новый блок можно разместить перед, после или между существующих блоков.

.. important:: Блоки, отвечающие за передвижение коптера, обязательно должны находиться между блоками взлёта (Take off) и посадки (Land)!

В качестве примера рассмотрим небольшую программу полёта по квадрату:

1. Поскольку программа подразумевает полёт, начинаем её с блока **TAKE OFF** для осуществления взлёта. Маркер рядом с блоками поможет сориентироваться, какое действие выполняется в текущий момент.
2. Открываем цикл и указываем количество повторов.
3. Вносим в блок цикла блоки движения: **MOVE FORWARD**, **MOVE RIGHT**, **MOVE BACKWARD** и **MOVE LEFT** для движения вперёд, вправо, назад и влево соответственно. Указываем необходимые расстояния в блоках.
4. После указанного количества повторов произойдёт выход из цикла и переход к следующим блокам программы.
5. Завершаем программу блоком **LAND** для посадки Пионера.

.. figure:: ../../../_static/images/jump_blockMode/blocks_tutorial_3_light.svg
